input {
    jdbc { //자바 관련 기능
        # jdbc_driver_library =>  "/usr/share/logstash/mysql-connector-java-8.0.28.jar"
        # jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
        # jdbc_connection_string => "jdbc:mysql://my-database:3306/mydocker03"
        # jdbc_user =>"root"
        # jdbc_password => "root"
        # schedule => "* * * * *" # 분 시 일 월 년
        # statement => "select * from prouct where "

        # jdbc_driver_library =>  "/usr/share/logstash/mysql-connector-java-8.0.28.jar"
        # jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
        # jdbc_connection_string => "jdbc:mysql://my-database:3306/mydocker03"
        # jdbc_user =>"root"
        # jdbc_password => "root"
        # schedule => "* * * * *" # 분 시 일 월 년
        # use_column_value => true
        # tracking_column => "updatedat"
        # tracking_column_type => "timestamp"
        # last_run-metadata_path => "./aaa.txt" #트랙킹하고있는 값을 기준으로 statement 결과의 마지막 값을 저장한다.
        # statement => "select id, name, price, updatedat from product where updatedat > :sql_last_value order by updatedat asc" #검색 결과를 오름차순 정렬

        jdbc_driver_library =>  "/usr/share/logstash/mysql-connector-java-8.0.28.jar"
        jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
        jdbc_connection_string => "jdbc:mysql://my-database:3306/mydocker03"
        jdbc_user =>"root"
        jdbc_password => "root"
        schedule => "* * * * *" # 분 시 일 월 년
        use_column_value => true
        tracking_column => "updatedat"
        tracking_column_type => "numeric"
        last_run-metadata_path => "./aaa.txt" #트랙킹하고있는 값을 기준으로 statement 결과의 마지막 값을 저장한다.
        statement => "select id, name, price, unix_timestamp(updatedat) as updatedat from product where unix_timestamp(updatedat) > :sql_last_value order by updatedat asc" #검색 결과를 오름차순 정렬
    }
}

output {
    elasticsearch {
        hosts => "elasticsearch:9200"
        # index => "myproduct03"
        index => "myproduct03_new"
    }
}